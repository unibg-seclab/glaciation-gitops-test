apiVersion: v1
kind: Namespace
metadata:
  name: vault
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
  labels:
    create-ca-bundle: "true"
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vault-certificate
  namespace: vault
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-3"
spec:
  secretName: vault-tls
  issuerRef:
    name: my-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  privateKey:
    algorithm: RSA
    size: 2048
  subject:
    organizations:
      - system:nodes
  commonName: system:node:*.vault.svc.cluster.local
  isCA: false
  # TODO: Try restricting usages to digital signature, key encipherment, and
  # server auth
  usages:
  - digital signature
  - key encipherment
  - data encipherment
  - server auth
  - client auth
  dnsNames:
  - "*.vault-internal"
  - "*.vault-internal.vault.svc.cluster.local"
  - "*.vault"
  - "vault-internal.vault.svc.cluster.local"
  ipAddresses:
  - 127.0.0.1
  - 192.168.49.2
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
  finalizers:
   - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  sources:
  - repoURL: https://helm.releases.hashicorp.com
    chart: vault
    targetRevision: 0.28.0
    helm:
      valueFiles:
      - $values/values/vault-ha-values.yaml
  - repoURL: 'https://github.com/unibg-seclab/glaciation-gitops-test.git'
    targetRevision: main
    ref: values
  destination:
    server: "https://kubernetes.default.svc"
    namespace: vault
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
---
# Initialize the HA Vault cluster
apiVersion: batch/v1
kind: Job
metadata:
  name: init-vault-cluster
  namespace: vault
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
    # argocd.argoproj.io/hook: PostSync
spec:
  template:
    spec:
      containers:
      - name: vault
        image: hashicorp/vault:1.16.1
        env:
        - name: "SHARES"
          value: "5"
        - name: "THRESHOLD"
          value: "3"
        command:
        - /bin/sh
        - -c
        - |
          function unseal {
              head -n $THRESHOLD /vault/cluster-keys |
              while read line; do
                echo "$line";
                vault operator unseal -ca-cert=/etc/ssl/certs/ca.crt -address=https://$1.vault-internal:8200 $line; # > /dev/null
              done
          }

          vault operator init -ca-cert=/etc/ssl/certs/ca.crt -address=https://vault-0.vault-internal:8200 -key-shares=$SHARES -key-threshold=$THRESHOLD -format=json > /vault/response.json
          # Extract unseal keys from the JSON response
          awk '/"unseal_keys_b64": \[/{flag=1;next}/\]/{flag=0}flag' /vault/response.json | sed -n 's/\s*"\(.*\)".*/\1/p' > /vault/cluster-keys
          unseal vault-0
          vault operator raft join -ca-cert=/etc/ssl/certs/ca.crt -address=https://vault-1.vault-internal:8200 -leader-ca-cert="$(cat /vault/userconfig/vault-tls/ca.crt)" -leader-client-cert="$(cat /vault/userconfig/vault-tls/tls.crt)" -leader-client-key="$(cat /vault/userconfig/vault-tls/tls.key)" https://vault-0.vault-internal:8200 # > /dev/null
          unseal vault-1
          vault operator raft join -ca-cert=/etc/ssl/certs/ca.crt -address=https://vault-2.vault-internal:8200 -leader-ca-cert="$(cat /vault/userconfig/vault-tls/ca.crt)" -leader-client-cert="$(cat /vault/userconfig/vault-tls/tls.crt)" -leader-client-key="$(cat /vault/userconfig/vault-tls/tls.key)" https://vault-0.vault-internal:8200 # > /dev/null
          unseal vault-2
        securityContext:
          runAsUser: 100
          runAsGroup: 1000
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - mountPath: /etc/ssl/certs/ca.crt
          subPath: ca.crt
          name: ca-bundle
          readOnly: true
        - mountPath: /vault/userconfig/vault-tls
          name: userconfig-vault-tls
          readOnly: true
      restartPolicy: Never
      securityContext:
        runAsUser: 100
        runAsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - name: ca-bundle
        configMap:
          defaultMode: 422
          name: ca-bundle
      - name: userconfig-vault-tls
        secret:
          defaultMode: 420
          secretName: vault-tls
  backoffLimit: 1
